/*
 * config.c
 *
 *  Created on: Feb 27, 2022
 *      Author: adityasehgal
 */

#include "stm32f4xx.h"
#include "stm32f4xx_hal_cortex.h"
#include "stm32f4xx_ll_bus.h"
#include "stm32f4xx_ll_rcc.h"
#include "stm32f4xx_ll_pwr.h"
#include "stm32f4xx_ll_utils.h"
#include "stm32f4xx_ll_system.h"

#include "config.h"

extern TIM_HandleTypeDef htim6;

static void initTick(uint32_t TickPriority) {
	RCC_ClkInitTypeDef clkconfig;
	uint32_t uwTimclock = 0;
	uint32_t uwPrescalerValue = 0;
	uint32_t pFLatency;
	/*Configure the TIM6 IRQ priority */
	HAL_NVIC_SetPriority(TIM6_DAC_IRQn, TickPriority, 0);

	/* Enable the TIM6 global Interrupt */
	HAL_NVIC_EnableIRQ(TIM6_DAC_IRQn);

	/* Enable TIM6 clock */
	__HAL_RCC_TIM6_CLK_ENABLE();

	/* Get clock configuration */
	HAL_RCC_GetClockConfig(&clkconfig, &pFLatency);

	/* Compute TIM6 clock */
	uwTimclock = 2 * HAL_RCC_GetPCLK1Freq();
	/* Compute the prescaler value to have TIM6 counter clock equal to 1MHz */
	uwPrescalerValue = (uint32_t) ((uwTimclock / 1000000U) - 1U);

	/* Initialize TIM6 */
	htim6.Instance = TIM6;

	/* Initialize TIMx peripheral as follow:
	 + Period = [(TIM6CLK/1000) - 1]. to have a (1/1000) s time base.
	 + Prescaler = (uwTimclock/1000000 - 1) to have a 1MHz counter clock.
	 + ClockDivision = 0
	 + Counter direction = Up
	 */
	htim6.Init.Period = (1000000U / 1000U) - 1U;
	htim6.Init.Prescaler = uwPrescalerValue;
	htim6.Init.ClockDivision = 0;
	htim6.Init.CounterMode = TIM_COUNTERMODE_UP;

	if (HAL_TIM_Base_Init(&htim6) == HAL_OK) {
		/* Start the TIM time Base generation in interrupt mode */
		HAL_TIM_Base_Start_IT(&htim6);
	}

}

void config_sysInit(void) {
	HAL_NVIC_SetPriorityGrouping(NVIC_PRIORITYGROUP_4);

	initTick(TICK_INT_PRIORITY);

	LL_APB2_GRP1_EnableClock(LL_APB2_GRP1_PERIPH_SYSCFG);
	LL_APB1_GRP1_EnableClock(LL_APB1_GRP1_PERIPH_PWR);

	HAL_NVIC_SetPriority(PendSV_IRQn, 15, 0);

}
